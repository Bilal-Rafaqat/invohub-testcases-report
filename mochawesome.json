{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-12T13:00:04.158Z",
    "end": "2023-12-12T13:00:59.140Z",
    "duration": 54982,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4e878b14-517a-487c-881c-7e5a27d5d746",
      "title": "",
      "fullFile": "/home/devops/invohub/resource-engagement/test/e2e/evaluation/spec_1_pendings.js",
      "file": "/test/e2e/evaluation/spec_1_pendings.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48d3acb6-96ed-414c-86cd-76fdd2d9f98d",
          "title": "Pending Evaluations",
          "fullFile": "/home/devops/invohub/resource-engagement/test/e2e/evaluation/spec_1_pendings.js",
          "file": "/test/e2e/evaluation/spec_1_pendings.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pending Evaluations\"",
              "fullTitle": "Pending Evaluations \"before all\" hook in \"Pending Evaluations\"",
              "timedOut": false,
              "duration": 51027,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await utilFun.login(email, password);\nconst url = await utilFun.getUrl();\nassert.equal(url, baseUrl + '/home');\nlet query =[\n    `UPDATE employee_evaluations SET \"incrementType\" = 'annual' WHERE id = 26;`,\n    `UPDATE employee_evaluations SET \"processType\" = NULL WHERE id = 26;`,\n    `UPDATE employee_evaluations SET \"reasonForDefer\" = NULL WHERE id = 26;`,\n    `UPDATE employee_evaluations SET \"processDate\" = NULL WHERE id = 26;`,\n    `UPDATE employee_evaluations SET \"feedback\" = NULL WHERE id = 26;`,\n  `DELETE FROM employee_evaluations WHERE \"employeeId\" = 9742 AND \"incrementType\" = 'designation';`,\n    ];\n    await utilFun.udpateDatabase(query);",
              "err": {},
              "uuid": "30bb436e-94b5-41a0-8c06-8a223af5ba1e",
              "parentUUID": "48d3acb6-96ed-414c-86cd-76fdd2d9f98d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Pending Evaluations\"",
              "fullTitle": "Pending Evaluations \"before each\" hook in \"Pending Evaluations\"",
              "timedOut": false,
              "duration": 3906,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await utilFun.visit(baseUrl + '/evaluation');\nawait utilFun.wait(3000);",
              "err": {},
              "uuid": "eafdf254-be56-4061-a4bd-e816dfcedbca",
              "parentUUID": "48d3acb6-96ed-414c-86cd-76fdd2d9f98d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should check if pending evaluations are showing",
              "fullTitle": "Pending Evaluations should check if pending evaluations are showing",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = await evaluation.getAllPendingResourses();\nassert(obj.length > 0, `No Evaluation Found`);",
              "err": {},
              "uuid": "e7dc1c7c-6abe-46e2-a5e5-f71b9e32ec3b",
              "parentUUID": "48d3acb6-96ed-414c-86cd-76fdd2d9f98d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7dc1c7c-6abe-46e2-a5e5-f71b9e32ec3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 40,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test/report"
      },
      "version": "6.2.0"
    }
  }
}